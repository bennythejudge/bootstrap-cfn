{
    "ElasticLoadBalancer" : {
        "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
        "Properties" : {
            "LoadBalancerName": "",
            "Scheme" : "internet-facing",
            "Subnets": [{ "Ref" : "SubnetA" }, { "Ref" : "SubnetB" }, { "Ref" : "SubnetC" }],
            "SecurityGroups": [{ "Ref": "DefaultELBSecurityGroup" }],
            "Listeners" : [
            ]
        }
    },
    "ELBRolePolicies": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
            "PolicyName": "ELBBaseHost",
            "PolicyDocument": {
                "Statement": [
                    { "Action" : [
                          "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                          "elasticloadbalancing:RegisterInstancesWithLoadBalancer"
                      ],
                      "Resource" : [
                           {
                               "Fn::Join": [
                                   "",
                                      [
                                          "arn:aws:elasticloadbalancing:",
                                          { "Ref" : "AWS::Region" },
                                          ":",
                                          { "Ref":"AWS::AccountId" },
                                          "This is overwritten in config.py"
                                      ]
                               ]
                           }
                       ],
                      "Effect": "Allow" }
                ]
            },
            "Roles": [ { "Ref": "BaseHostRole" } ]
        }
    },
    "DefaultELBSecurityGroup" : {
       "Type" : "AWS::EC2::SecurityGroup",
       "Properties" :
       {
          "GroupDescription" : "DefaultELBSecurityGroup",
          "SecurityGroupIngress" : [
              {
                  "IpProtocol": "tcp",
                  "FromPort": 443,
                  "ToPort": 443,
                  "CidrIp": "0.0.0.0/0"
              },
              {
                  "IpProtocol": "tcp",
                  "FromPort": 80,
                  "ToPort": 80,
                  "CidrIp": "0.0.0.0/0"
              }
          ],
          "VpcId" : { "Ref": "VPC"}
       }
    },
    "DNSRecord" : {
        "Type" : "AWS::Route53::RecordSetGroup",
        "Properties" : {
            "HostedZoneName" : "",
            "Comment" : "Zone apex alias targeted to ElasticLoadBalancer.",
            "RecordSets" : [
                {
                    "Name" : "",
                    "Type" : "A",
                    "AliasTarget" : {
                        "HostedZoneId" : { "Fn::GetAtt" : [] },
                        "DNSName" : { "Fn::GetAtt" : [] }
                    }
                }
            ]
        }
    }
}
