{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "MoJ DS - AWS CloudFormation stack for BaseHost",

  "Parameters" : {

    "KeyName" : {
      "Type" : "String",
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the web server",
      "Default": "default"
    },

    "VolumeSize" : {
      "Description" : "Size of the additional EBS volume in Gigabytes",
      "Type" : "String",
      "Default": "40"
    },

    "VolumeDevice": {
      "Description" : "Device used to present the additional EBS volume as",
      "Type" : "String",
      "Default" : "/dev/sdf"
    },

    "InstanceType" : {
      "Description" : "BaseHost EC2 instance type",
      "Type" : "String",
      "Default" : "t2.medium",
      "AllowedValues" : [ "t2.micro", "t2.small", "t2.medium", "c3.large"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    }

  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
      "c3.large"    : { "Arch" : "HVM64"  }
    },

    "AWSRegionArch2AMI" : {
      "eu-west-1"      : { "HVM64" : "ami-f0b11187" },
      "eu-central-1"   : { "HVM64" : "ami-b83c0aa5" }
    }

  },

  "Resources" : {

    "InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ { "Ref": "RootRole" } ]
      }
    },

    "RootRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [ "sts:AssumeRole" ], "Effect": "Allow", "Principal": { "Service": [ "ec2.amazonaws.com" ] }
            }
          ]
        }
      }
    },

    "RolePolicies": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "root",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                  "ec2:Describe*"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                  "rds:Describe*"
              ],
              "Resource": "*",
              "Effect": "Allow"
            }
          ]
        },
        "Roles": [
          {
              "Ref": "RootRole"
          }
        ]
      }
    },



    "BaseHost": {
      "Type": "AWS::EC2::Instance",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "configSets" : {
            "full_install" : [ "install_cfn" ]
          },

          "install_cfn" : {
            "files" : {
              "/etc/cfn/cfn-hup.conf" : {
                "content" : { "Fn::Join" : ["", [
                  "[main]\n",
                  "stack=", { "Ref" : "AWS::StackId" }, "\n",
                  "region=", { "Ref" : "AWS::Region" }, "\n"
                ]]},
                "mode"    : "000400",
                "owner"   : "root",
                "group"   : "root"
              },

              "/etc/cfn/hooks.d/cfn-auto-reloader.conf" : {
                "content": { "Fn::Join" : ["", [
                  "[cfn-auto-reloader-hook]\n",
                  "triggers=post.update\n",
                  "path=Resources.BaseHost.Metadata.AWS::CloudFormation::Init\n",
                  "action=/usr/local/bin/cfn-init -v ",
                  "         --stack ", { "Ref" : "AWS::StackName" },
                  "         --resource BaseHost ",
                  "         --configsets full_install ",
                  "         --region ", { "Ref" : "AWS::Region" }, "\n",
                  "runas=root\n"
                ]]}
              }
            }
          }
        }
      },
      "Properties": {
        "IamInstanceProfile": { "Ref": "InstanceProfile" },
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "InstanceType"   : { "Ref" : "InstanceType" },
        "SecurityGroups" : [ ],
        "KeyName"        : { "Ref" : "KeyName" },
        "Tags" : [
          { "Key" : "Name", "Value" : "docker" },
          { "Key" : "Env", "Value" : "dev" },
          { "Key" : "App", "Value" : "pf_rails" }
        ],
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -xe\n",
          "wget https://raw.githubusercontent.com/ministryofjustice/bootstrap-cfn/master/bootstrap-salt.sh -O /tmp/moj-bootstrap.sh\n",
          "chmod 755 /tmp/moj-bootstrap.sh\n",
          "/tmp/moj-bootstrap.sh ", { "Ref" : "AWS::StackId" }, " ", { "Ref" : "AWS::Region" }, " full_install", "\n"
        ]]}}
      },
      "CreationPolicy" : {
        "ResourceSignal" : {
          "Timeout" : "PT30M"
        }
      }
    },

    "VolumeData" : {
       "Type" : "AWS::EC2::Volume",
       "Properties" : {
          "Size" : { "Ref" : "VolumeSize" },
          "AvailabilityZone" : { "Fn::GetAtt" : [ "BaseHost", "AvailabilityZone" ] },
          "Tags" : [ {
             "Key" : "EC2",
             "Value" : { "Ref" : "BaseHost" }
          } ]
       }
    },

    "MountPoint" : {
       "Type" : "AWS::EC2::VolumeAttachment",
       "Properties" : {
          "InstanceId" : { "Ref" : "BaseHost" },
          "VolumeId"  : { "Ref" : "VolumeData" },
          "Device" : { "Ref" : "VolumeDevice" }
       }
    }
  }
}
